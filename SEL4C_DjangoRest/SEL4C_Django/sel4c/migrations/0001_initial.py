# Generated by Django 4.2.5 on 2023-09-24 22:55

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(default=0, primary_key=True, serialize=False)),
                ('activity_num', models.IntegerField()),
                ('title', models.TextField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Entrepreneur',
            fields=[
                ('id', models.BigAutoField(default=0, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=40, unique=True)),
                ('email', models.CharField(max_length=40, unique=True)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('degree', models.TextField()),
                ('institution', models.TextField()),
                ('gender', models.TextField()),
                ('age', models.IntegerField()),
                ('country', models.TextField()),
                ('studyField', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(default=0, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sel4c.activity')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(default=0, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='')),
                ('filetype', models.TextField()),
                ('activity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sel4c.activity')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(default=0, primary_key=True, serialize=False)),
                ('number', models.IntegerField(default=0)),
                ('text', models.TextField(default='N/A')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sel4c.question')),
            ],
        ),
        migrations.AddField(
            model_name='activity',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sel4c.entrepreneur'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(default=0, primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=40, unique=True)),
                ('first_name', models.TextField()),
                ('last_name', models.TextField()),
                ('username', models.CharField(max_length=40, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
