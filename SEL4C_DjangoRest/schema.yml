openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api-root/activities/:
    get:
      operationId: api_root_activities_list
      description: API endpoint that allows Actividades to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityList'
          description: ''
    post:
      operationId: api_root_activities_create
      description: API endpoint that allows Actividades to be viewed or edited.
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
  /api-root/activities/{id}/:
    get:
      operationId: api_root_activities_retrieve
      description: API endpoint that allows Actividades to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    put:
      operationId: api_root_activities_update
      description: API endpoint that allows Actividades to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    patch:
      operationId: api_root_activities_partial_update
      description: API endpoint that allows Actividades to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivity'
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: ''
    delete:
      operationId: api_root_activities_destroy
      description: API endpoint that allows Actividades to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this activity.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api-root/answers/:
    get:
      operationId: api_root_answers_list
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnswerList'
          description: ''
    post:
      operationId: api_root_answers_create
      description: API endpoint that allows Respuestas to be viewed or edited.
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api-root/answers/{id}/:
    get:
      operationId: api_root_answers_retrieve
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: api_root_answers_update
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: api_root_answers_partial_update
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswer'
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: api_root_answers_destroy
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api-root/completed-acts/:
    get:
      operationId: api_root_completed_acts_list
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivitiesCompletedList'
          description: ''
    post:
      operationId: api_root_completed_acts_create
      description: API endpoint that allows Respuestas to be viewed or edited.
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitiesCompleted'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivitiesCompleted'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivitiesCompleted'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCompleted'
          description: ''
  /api-root/completed-acts/{id}/:
    get:
      operationId: api_root_completed_acts_retrieve
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Activities Completed.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCompleted'
          description: ''
    put:
      operationId: api_root_completed_acts_update
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Activities Completed.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivitiesCompleted'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivitiesCompleted'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivitiesCompleted'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCompleted'
          description: ''
    patch:
      operationId: api_root_completed_acts_partial_update
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Activities Completed.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActivitiesCompleted'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActivitiesCompleted'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActivitiesCompleted'
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCompleted'
          description: ''
    delete:
      operationId: api_root_completed_acts_destroy
      description: API endpoint that allows Respuestas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Activities Completed.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api-root/entrepreneurs/:
    get:
      operationId: api_root_entrepreneurs_list
      description: API endpoint that allows Usuarios to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntrepreneurList'
          description: ''
    post:
      operationId: api_root_entrepreneurs_create
      description: API endpoint that allows Usuarios to be viewed or edited.
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entrepreneur'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entrepreneur'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entrepreneur'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrepreneur'
          description: ''
  /api-root/entrepreneurs/{id}/:
    get:
      operationId: api_root_entrepreneurs_retrieve
      description: API endpoint that allows Usuarios to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Entrepreneurs.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrepreneur'
          description: ''
    put:
      operationId: api_root_entrepreneurs_update
      description: API endpoint that allows Usuarios to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Entrepreneurs.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entrepreneur'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Entrepreneur'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Entrepreneur'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrepreneur'
          description: ''
    patch:
      operationId: api_root_entrepreneurs_partial_update
      description: API endpoint that allows Usuarios to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Entrepreneurs.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEntrepreneur'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEntrepreneur'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEntrepreneur'
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrepreneur'
          description: ''
    delete:
      operationId: api_root_entrepreneurs_destroy
      description: API endpoint that allows Usuarios to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Entrepreneurs.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api-root/files/:
    get:
      operationId: api_root_files_list
      description: API endpoint that allows Archivos to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileList'
          description: ''
    post:
      operationId: api_root_files_create
      description: API endpoint that allows Archivos to be viewed or edited.
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /api-root/files/{id}/:
    get:
      operationId: api_root_files_retrieve
      description: API endpoint that allows Archivos to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    put:
      operationId: api_root_files_update
      description: API endpoint that allows Archivos to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    patch:
      operationId: api_root_files_partial_update
      description: API endpoint that allows Archivos to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFile'
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    delete:
      operationId: api_root_files_destroy
      description: API endpoint that allows Archivos to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this file.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api-root/questions/:
    get:
      operationId: api_root_questions_list
      description: API endpoint that allows Preguntas to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
          description: ''
    post:
      operationId: api_root_questions_create
      description: API endpoint that allows Preguntas to be viewed or edited.
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api-root/questions/{id}/:
    get:
      operationId: api_root_questions_retrieve
      description: API endpoint that allows Preguntas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: api_root_questions_update
      description: API endpoint that allows Preguntas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: api_root_questions_partial_update
      description: API endpoint that allows Preguntas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestion'
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: api_root_questions_destroy
      description: API endpoint that allows Preguntas to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - api-root
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/answers/create-multiple/:
    post:
      operationId: api_answers_create_multiple_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Answer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Answer'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api/questions/create-multiple/:
    post:
      operationId: api_questions_create_multiple_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Question'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Question'
        required: true
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - basicAuth: []
      - tokenAuth: []
      - cookieAuth: []
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/token/verify/:
    post:
      operationId: api_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    ActivitiesCompleted:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        activity:
          type: integer
        entrepreneur:
          type: integer
        attempts:
          type: integer
      required:
      - activity
      - entrepreneur
      - id
    Activity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        activity_num:
          $ref: '#/components/schemas/ActivityNumEnum'
        title:
          type: string
          maxLength: 255
        description:
          type: string
      required:
      - activity_num
      - description
      - id
      - title
    ActivityNumEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
        * `6` - 6
        * `7` - 7
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        activity:
          type: integer
        question:
          type: integer
        answer:
          type: integer
        entrepreneur:
          type: integer
      required:
      - activity
      - entrepreneur
      - id
      - question
    Entrepreneur:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 25
        password:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 15
        last_name:
          type: string
          maxLength: 15
        degree:
          type: string
          maxLength: 255
        institution:
          type: string
          maxLength: 255
        gender:
          $ref: '#/components/schemas/GenderEnum'
        age:
          type: integer
        country:
          type: string
          maxLength: 255
        studyField:
          type: string
          maxLength: 255
      required:
      - age
      - country
      - degree
      - email
      - first_name
      - gender
      - id
      - institution
      - last_name
      - password
      - studyField
    File:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        filetype:
          type: string
          maxLength: 255
        activity:
          type: integer
        entrepreneur:
          type: integer
      required:
      - activity
      - file
      - filetype
      - id
    GenderEnum:
      enum:
      - Masculino
      - Femenino
      - No binario
      - Prefiero no decirlo
      type: string
      description: |-
        * `Masculino` - Masculino
        * `Femenino` - Femenino
        * `No binario` - No binario
        * `Prefiero no decirlo` - Prefiero no decirlo
    PaginatedActivitiesCompletedList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ActivitiesCompleted'
    PaginatedActivityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
    PaginatedAnswerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    PaginatedEntrepreneurList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Entrepreneur'
    PaginatedFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/File'
    PaginatedQuestionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    PatchedActivitiesCompleted:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        activity:
          type: integer
        entrepreneur:
          type: integer
        attempts:
          type: integer
    PatchedActivity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        activity_num:
          $ref: '#/components/schemas/ActivityNumEnum'
        title:
          type: string
          maxLength: 255
        description:
          type: string
    PatchedAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        activity:
          type: integer
        question:
          type: integer
        answer:
          type: integer
        entrepreneur:
          type: integer
    PatchedEntrepreneur:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 25
        password:
          type: string
          maxLength: 255
        first_name:
          type: string
          maxLength: 15
        last_name:
          type: string
          maxLength: 15
        degree:
          type: string
          maxLength: 255
        institution:
          type: string
          maxLength: 255
        gender:
          $ref: '#/components/schemas/GenderEnum'
        age:
          type: integer
        country:
          type: string
          maxLength: 255
        studyField:
          type: string
          maxLength: 255
    PatchedFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
        filetype:
          type: string
          maxLength: 255
        activity:
          type: integer
        entrepreneur:
          type: integer
    PatchedQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_num:
          type: integer
        description:
          type: string
          maxLength: 250
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_num:
          type: integer
        description:
          type: string
          maxLength: 250
      required:
      - description
      - id
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
